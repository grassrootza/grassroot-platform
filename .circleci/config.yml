version: 2

step-library:
  - &fetch-aws-cli
      run:
        name:
        command: |
          sudo apt-get update && sudo apt-get install python
          curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
          sudo python get-pip.py
          sudo apt-get install python-dev
          pip install awscli --upgrade --user
          pip install awsebcli --upgrade --user

jobs:
    dependencies:
      docker:
        - image: circleci/openjdk:8
      steps:
        - checkout
        - restore_cache:
                    keys:
                      - v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
                      - v2-gradle-deps
        - run: ./gradlew downloadDependencies
        - save_cache:
                    key: v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
                    paths:
                      - .gradle
                      - ~/.gradle
                      - ~/.m2

    test:
      docker:
        - image: circleci/openjdk:8
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
              - v2-gradle-deps
        - run: ./gradlew test

    build:
      docker:
        - image: circleci/openjdk:8
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-gradle-deps-{{ checksum "build.gradle" }}-{{ checksum "grassroot-core/build.gradle" }}-{{ checksum "grassroot-integration/build.gradle" }}-{{ checksum "grassroot-services/build.gradle" }}-{{ checksum "grassroot-webapp/build.gradle" }}
              - v2-gradle-deps
        - run: ./gradlew build -x test
        - save_cache:
            key: v2-built-jar-{{ .Branch }}-{{ .Revision }}
            paths:
              - grassroot-webapp/build

    deploy-staging:
      docker:
        - image: circleci/openjdk:8
          auth:
            username: $DOCKER_USER
            password: $DOCKER_PASS
      environment:
        ENVIRONMENT: "staging"
        EBENVIRONMENT: "gr-stg"
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-built-jar-{{ .Branch }}-{{ .Revision }}
        - setup_remote_docker:
            docker_layer_caching: true
        - *fetch-aws-cli
        - run:
            name: Build image and deploy to Docker Hub
            command: |
              export PATH=~/.local/bin:$PATH
              mv .deploy/buildimage.sh buildimage.sh
              chmod +x buildimage.sh
              ./buildimage.sh $CIRCLE_SHA1 $ENVIRONMENT
        - run:
            name: Deploy files to beanstalk, after copying over config
            command: |
              export PATH=~/.local/bin:$PATH
              mv .deploy/templates/nginx.staging.config .deploy/.ebextensions/001_nginx_http-https.config
              mv .deploy/ebdeploy.sh ebdeploy.sh
              chmod +x ebdeploy.sh
              ./ebdeploy.sh $CIRCLE_SHA1 $ENVIRONMENT $EBENVIRONMENT

    deploy-production:
      docker:
        - image: circleci/openjdk:8
          auth:
            username: $DOCKER_USER
            password: $DOCKER_PASS
      environment:
        ENVIRONMENT: "production"
        EBENVIRONMENT: "gr-prod"
      steps:
        - checkout
        - restore_cache:
            keys:
              - v2-built-jar-{{ .Branch }}-{{ .Revision }}
        - setup_remote_docker:
            docker_layer_caching: true
        - *fetch-aws-cli
        - run:
            name: Build image and deploy to Docker Hub
            command: |
              export PATH=~/.local/bin:$PATH
              mv .deploy/buildimage.sh buildimage.sh
              chmod +x buildimage.sh
              ./buildimage.sh $CIRCLE_SHA1 $ENVIRONMENT
        - run:
            name: Deploy files to beanstalk, after copying over config
            command: |
              export PATH=~/.local/bin:$PATH
              mv .deploy/ebdeploy.sh ebdeploy.sh
              chmod +x ebdeploy.sh
              ./ebdeploy.sh $CIRCLE_SHA1 $ENVIRONMENT $EBENVIRONMENT


workflows:
  version: 2
  build_and_test:
    jobs:
    - dependencies
    - test:
        requires:
          - dependencies
    - build:
        requires:
          - test
    - deploy-staging:
        requires:
          - build
        filters:
          branches:
            only: preprod
    - deploy-production:
        requires:
          - build
        filters:
          branches:
            only: master
